name: Build and Pack

on:
  workflow_call:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  native-linux:
    name: Native Linux (${{ matrix.rid }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            rid: linux-x64
            artifact-name: native-linux-x64
            library: libvello_ffi.so
          - target: aarch64-unknown-linux-gnu
            rid: linux-arm64
            artifact-name: native-linux-arm64
            library: libvello_ffi.so
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.target }}

      - name: Install cross toolchain
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: sudo apt-get update && sudo apt-get install -y g++-aarch64-linux-gnu

      - name: Build native artifact
        run: ./scripts/build-native-linux.sh ${{ matrix.target }} release ${{ matrix.rid }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: artifacts/runtimes/${{ matrix.rid }}
          if-no-files-found: error

  native-macos:
    name: Native macOS (${{ matrix.rid }})
    runs-on: macos-14
    strategy:
      matrix:
        include:
          - target: x86_64-apple-darwin
            rid: osx-x64
            artifact-name: native-macos-x64
            library: libvello_ffi.dylib
            sdk: ""
          - target: aarch64-apple-darwin
            rid: osx-arm64
            artifact-name: native-macos-arm64
            library: libvello_ffi.dylib
            sdk: ""
          - target: aarch64-apple-ios
            rid: ios-arm64
            artifact-name: native-ios-arm64
            library: libvello_ffi.a
            sdk: iphoneos
          - target: x86_64-apple-ios
            rid: iossimulator-x64
            artifact-name: native-iossimulator-x64
            library: libvello_ffi.a
            sdk: iphonesimulator
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.target }}

      - name: Configure Apple SDK
        if: matrix.sdk != ''
        run: echo "SDKROOT=$(xcrun --sdk ${{ matrix.sdk }} --show-sdk-path)" >> $GITHUB_ENV

      - name: Build native artifact
        run: ./scripts/build-native-macos.sh ${{ matrix.target }} release '${{ matrix.sdk }}' '${{ matrix.rid }}'

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: artifacts/runtimes/${{ matrix.rid }}
          if-no-files-found: error

  native-android:
    name: Native Android (${{ matrix.rid }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: aarch64-linux-android
            rid: android-arm64
            artifact-name: native-android-arm64
            library: libvello_ffi.so
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.target }}

      - name: Install Android NDK
        run: |
          sudo apt-get update && sudo apt-get install -y unzip wget
          wget https://dl.google.com/android/repository/android-ndk-r26d-linux.zip -O $RUNNER_TEMP/android-ndk.zip
          unzip -q $RUNNER_TEMP/android-ndk.zip -d $RUNNER_TEMP
          echo "ANDROID_NDK_HOME=$RUNNER_TEMP/android-ndk-r26d" >> $GITHUB_ENV
          echo "$RUNNER_TEMP/android-ndk-r26d/toolchains/llvm/prebuilt/linux-x86_64/bin" >> $GITHUB_PATH

      - name: Build native artifact
        env:
          ANDROID_NDK_HOME: ${{ env.ANDROID_NDK_HOME }}
        run: ./scripts/build-native-android.sh ${{ matrix.target }} release ${{ matrix.rid }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: artifacts/runtimes/${{ matrix.rid }}
          if-no-files-found: error

  native-wasm:
    name: Native WASM (${{ matrix.rid }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: wasm32-unknown-unknown
            rid: browser-wasm
            artifact-name: native-wasm
            library: vello_ffi.wasm
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.target }}

      - name: Build native artifact
        run: ./scripts/build-native-wasm.sh ${{ matrix.target }} release ${{ matrix.rid }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: artifacts/runtimes/${{ matrix.rid }}
          if-no-files-found: error

  native-windows:
    name: Native Windows (${{ matrix.rid }})
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - target: x86_64-pc-windows-msvc
            rid: win-x64
            artifact-name: native-windows-x64
          - target: aarch64-pc-windows-msvc
            rid: win-arm64
            artifact-name: native-windows-arm64
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.target }}

      - name: Build native artifact
        shell: pwsh
        run: ./scripts/build-native-windows.ps1 ${{ matrix.target }} release ${{ matrix.rid }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: artifacts/runtimes/${{ matrix.rid }}
          if-no-files-found: error

  pack-native-linux:
    name: Pack Native NuGets (Linux)
    runs-on: ubuntu-latest
    needs:
      - native-linux
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Download Linux native artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: native-linux-*
          path: artifacts
          merge-multiple: false

      - name: Collect Linux runtimes
        run: ./scripts/collect-native-artifacts.sh artifacts artifacts/runtimes

      - name: List Linux runtimes
        run: ls -R artifacts/runtimes

      - name: Copy Linux runtimes into projects
        run: ./scripts/copy-runtimes.sh artifacts/runtimes

      - name: Pack Linux native NuGets
        run: ./scripts/pack-native-nugets.sh artifacts/runtimes artifacts/nuget

      - name: List Linux native packages
        run: ls artifacts/nuget

      - name: Upload Linux native NuGet packages
        uses: actions/upload-artifact@v4
        with:
          name: native-nuget-packages-linux
          path: artifacts/nuget
          if-no-files-found: error

  pack-native-macos:
    name: Pack Native NuGets (Apple)
    runs-on: ubuntu-latest
    needs:
      - native-macos
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Download macOS native artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: native-macos-*
          path: artifacts
          merge-multiple: false

      - name: Download iOS native artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: native-ios*
          path: artifacts
          merge-multiple: false

      - name: Collect Apple runtimes
        run: ./scripts/collect-native-artifacts.sh artifacts artifacts/runtimes

      - name: List Apple runtimes
        run: ls -R artifacts/runtimes

      - name: Copy Apple runtimes into projects
        run: ./scripts/copy-runtimes.sh artifacts/runtimes

      - name: Pack Apple native NuGets
        run: ./scripts/pack-native-nugets.sh artifacts/runtimes artifacts/nuget

      - name: List Apple native packages
        run: ls artifacts/nuget

      - name: Upload Apple native NuGet packages
        uses: actions/upload-artifact@v4
        with:
          name: native-nuget-packages-apple
          path: artifacts/nuget
          if-no-files-found: error

  pack-native-android:
    name: Pack Native NuGets (Android)
    runs-on: ubuntu-latest
    needs:
      - native-android
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Download Android native artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: native-android-*
          path: artifacts
          merge-multiple: false

      - name: Collect Android runtimes
        run: ./scripts/collect-native-artifacts.sh artifacts artifacts/runtimes

      - name: List Android runtimes
        run: ls -R artifacts/runtimes

      - name: Copy Android runtimes into projects
        run: ./scripts/copy-runtimes.sh artifacts/runtimes

      - name: Pack Android native NuGets
        run: ./scripts/pack-native-nugets.sh artifacts/runtimes artifacts/nuget

      - name: List Android native packages
        run: ls artifacts/nuget

      - name: Upload Android native NuGet packages
        uses: actions/upload-artifact@v4
        with:
          name: native-nuget-packages-android
          path: artifacts/nuget
          if-no-files-found: error

  pack-native-wasm:
    name: Pack Native NuGets (WASM)
    runs-on: ubuntu-latest
    needs:
      - native-wasm
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Download WASM native artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: native-wasm*
          path: artifacts
          merge-multiple: false

      - name: Collect WASM runtimes
        run: ./scripts/collect-native-artifacts.sh artifacts artifacts/runtimes

      - name: List WASM runtimes
        run: ls -R artifacts/runtimes

      - name: Copy WASM runtimes into projects
        run: ./scripts/copy-runtimes.sh artifacts/runtimes

      - name: Pack WASM native NuGets
        run: ./scripts/pack-native-nugets.sh artifacts/runtimes artifacts/nuget

      - name: List WASM native packages
        run: ls artifacts/nuget

      - name: Upload WASM native NuGet packages
        uses: actions/upload-artifact@v4
        with:
          name: native-nuget-packages-wasm
          path: artifacts/nuget
          if-no-files-found: error

  pack-native-windows:
    name: Pack Native NuGets (Windows)
    runs-on: ubuntu-latest
    needs:
      - native-windows
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Download Windows native artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: native-windows-*
          path: artifacts
          merge-multiple: false

      - name: Collect Windows runtimes
        run: ./scripts/collect-native-artifacts.sh artifacts artifacts/runtimes

      - name: List Windows runtimes
        run: ls -R artifacts/runtimes

      - name: Copy Windows runtimes into projects
        run: ./scripts/copy-runtimes.sh artifacts/runtimes

      - name: Pack Windows native NuGets
        run: ./scripts/pack-native-nugets.sh artifacts/runtimes artifacts/nuget

      - name: List Windows native packages
        run: ls artifacts/nuget

      - name: Upload Windows native NuGet packages
        uses: actions/upload-artifact@v4
        with:
          name: native-nuget-packages-windows
          path: artifacts/nuget
          if-no-files-found: error

  collect-native-nugets:
    name: Combine Native NuGets
    runs-on: ubuntu-latest
    needs:
      - pack-native-linux
      - pack-native-macos
      - pack-native-android
      - pack-native-wasm
      - pack-native-windows
    steps:
      - name: Download packaged native artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: native-nuget-packages-*
          path: artifacts/nuget
          merge-multiple: true

      - name: List combined native packages
        run: ls -R artifacts/nuget

      - name: Upload combined native NuGet packages
        uses: actions/upload-artifact@v4
        with:
          name: native-nuget-packages
          path: artifacts/nuget
          if-no-files-found: error

  pack-managed:
    name: Pack NuGet
    runs-on: ubuntu-latest
    needs:
      - collect-native-nugets
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Download native NuGet packages
        uses: actions/download-artifact@v4
        with:
          name: native-nuget-packages
          path: artifacts/nuget

      - name: List native NuGet packages
        run: ls -R artifacts/nuget

      - name: Pack managed NuGet packages
        run: ./scripts/pack-managed-nugets.sh artifacts/nuget artifacts/nuget

      - name: Upload NuGet packages
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          path: artifacts/nuget
          if-no-files-found: error

  test-packages:
    name: Validate Packages (${{ matrix.os }})
    needs:
      - pack-managed
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            native_project: integration/native/linux-x64/VelloSharp.Native.LinuxX64.Integration.csproj
            managed_projects: |
              integration/managed/VelloSharp.Core.Integration/VelloSharp.Core.Integration.csproj
              integration/managed/VelloSharp.Text.Integration/VelloSharp.Text.Integration.csproj
              integration/managed/VelloSharp.Gpu.Integration/VelloSharp.Gpu.Integration.csproj
              integration/managed/VelloSharp.Skia.Core.Integration/VelloSharp.Skia.Core.Integration.csproj
              integration/managed/VelloSharp.Skia.Gpu.Integration/VelloSharp.Skia.Gpu.Integration.csproj
              integration/managed/VelloSharp.Skia.Cpu.Integration/VelloSharp.Skia.Cpu.Integration.csproj
              integration/managed/VelloSharp.Avalonia.Vello.Integration/VelloSharp.Avalonia.Vello.Integration.csproj
              integration/managed/VelloSharp.Avalonia.Winit.Integration/VelloSharp.Avalonia.Winit.Integration.csproj
              integration/managed/VelloSharp.Integration.Skia.Integration/VelloSharp.Integration.Skia.Integration.csproj
              integration/managed/VelloSharp.Package.Integration/VelloSharp.Package.Integration.csproj
              integration/managed/VelloSharp.Uno.Integration/VelloSharp.Uno.Integration.csproj
              integration/managed/VelloSharp.ChartData.Integration/VelloSharp.ChartData.Integration.csproj
              integration/managed/VelloSharp.ChartDiagnostics.Integration/VelloSharp.ChartDiagnostics.Integration.csproj
              integration/managed/VelloSharp.ChartEngine.Integration/VelloSharp.ChartEngine.Integration.csproj
              integration/managed/VelloSharp.Charting.Integration/VelloSharp.Charting.Integration.csproj
              integration/managed/VelloSharp.ChartRuntime.Integration/VelloSharp.ChartRuntime.Integration.csproj
              integration/managed/VelloSharp.Composition.Integration/VelloSharp.Composition.Integration.csproj
              integration/managed/VelloSharp.Gauges.Integration/VelloSharp.Gauges.Integration.csproj
              integration/managed/VelloSharp.Editor.Integration/VelloSharp.Editor.Integration.csproj
              integration/managed/VelloSharp.Scada.Integration/VelloSharp.Scada.Integration.csproj
              integration/managed/VelloSharp.TreeDataGrid.Integration/VelloSharp.TreeDataGrid.Integration.csproj
              integration/managed/VelloSharp.Charting.Avalonia.Integration/VelloSharp.Charting.Avalonia.Integration.csproj
          - os: macos-14
            native_project: integration/native/osx-arm64/VelloSharp.Native.OsxArm64.Integration.csproj
            managed_projects: |
              integration/managed/VelloSharp.Core.Integration/VelloSharp.Core.Integration.csproj
              integration/managed/VelloSharp.Text.Integration/VelloSharp.Text.Integration.csproj
              integration/managed/VelloSharp.Gpu.Integration/VelloSharp.Gpu.Integration.csproj
              integration/managed/VelloSharp.Skia.Core.Integration/VelloSharp.Skia.Core.Integration.csproj
              integration/managed/VelloSharp.Skia.Gpu.Integration/VelloSharp.Skia.Gpu.Integration.csproj
              integration/managed/VelloSharp.Skia.Cpu.Integration/VelloSharp.Skia.Cpu.Integration.csproj
              integration/managed/VelloSharp.Avalonia.Vello.Integration/VelloSharp.Avalonia.Vello.Integration.csproj
              integration/managed/VelloSharp.Avalonia.Winit.Integration/VelloSharp.Avalonia.Winit.Integration.csproj
              integration/managed/VelloSharp.Integration.Skia.Integration/VelloSharp.Integration.Skia.Integration.csproj
              integration/managed/VelloSharp.Package.Integration/VelloSharp.Package.Integration.csproj
              integration/managed/VelloSharp.Uno.Integration/VelloSharp.Uno.Integration.csproj
              integration/managed/VelloSharp.ChartData.Integration/VelloSharp.ChartData.Integration.csproj
              integration/managed/VelloSharp.ChartDiagnostics.Integration/VelloSharp.ChartDiagnostics.Integration.csproj
              integration/managed/VelloSharp.ChartEngine.Integration/VelloSharp.ChartEngine.Integration.csproj
              integration/managed/VelloSharp.Charting.Integration/VelloSharp.Charting.Integration.csproj
              integration/managed/VelloSharp.ChartRuntime.Integration/VelloSharp.ChartRuntime.Integration.csproj
              integration/managed/VelloSharp.Composition.Integration/VelloSharp.Composition.Integration.csproj
              integration/managed/VelloSharp.Gauges.Integration/VelloSharp.Gauges.Integration.csproj
              integration/managed/VelloSharp.Editor.Integration/VelloSharp.Editor.Integration.csproj
              integration/managed/VelloSharp.Scada.Integration/VelloSharp.Scada.Integration.csproj
              integration/managed/VelloSharp.TreeDataGrid.Integration/VelloSharp.TreeDataGrid.Integration.csproj
              integration/managed/VelloSharp.Charting.Avalonia.Integration/VelloSharp.Charting.Avalonia.Integration.csproj
          - os: windows-latest
            native_project: integration/native/win-x64/VelloSharp.Native.WinX64.Integration.csproj
            managed_projects: |
              integration/managed/VelloSharp.Core.Integration/VelloSharp.Core.Integration.csproj
              integration/managed/VelloSharp.Text.Integration/VelloSharp.Text.Integration.csproj
              integration/managed/VelloSharp.Gpu.Integration/VelloSharp.Gpu.Integration.csproj
              integration/managed/VelloSharp.Skia.Core.Integration/VelloSharp.Skia.Core.Integration.csproj
              integration/managed/VelloSharp.Skia.Gpu.Integration/VelloSharp.Skia.Gpu.Integration.csproj
              integration/managed/VelloSharp.Skia.Cpu.Integration/VelloSharp.Skia.Cpu.Integration.csproj
              integration/managed/VelloSharp.Avalonia.Vello.Integration/VelloSharp.Avalonia.Vello.Integration.csproj
              integration/managed/VelloSharp.Avalonia.Winit.Integration/VelloSharp.Avalonia.Winit.Integration.csproj
              integration/managed/VelloSharp.Integration.Skia.Integration/VelloSharp.Integration.Skia.Integration.csproj
              integration/managed/VelloSharp.Package.Integration/VelloSharp.Package.Integration.csproj
              integration/managed/VelloSharp.Uno.Integration/VelloSharp.Uno.Integration.csproj
              integration/managed/VelloSharp.ChartData.Integration/VelloSharp.ChartData.Integration.csproj
              integration/managed/VelloSharp.ChartDiagnostics.Integration/VelloSharp.ChartDiagnostics.Integration.csproj
              integration/managed/VelloSharp.ChartEngine.Integration/VelloSharp.ChartEngine.Integration.csproj
              integration/managed/VelloSharp.Charting.Integration/VelloSharp.Charting.Integration.csproj
              integration/managed/VelloSharp.ChartRuntime.Integration/VelloSharp.ChartRuntime.Integration.csproj
              integration/managed/VelloSharp.Composition.Integration/VelloSharp.Composition.Integration.csproj
              integration/managed/VelloSharp.Gauges.Integration/VelloSharp.Gauges.Integration.csproj
              integration/managed/VelloSharp.Editor.Integration/VelloSharp.Editor.Integration.csproj
              integration/managed/VelloSharp.Scada.Integration/VelloSharp.Scada.Integration.csproj
              integration/managed/VelloSharp.TreeDataGrid.Integration/VelloSharp.TreeDataGrid.Integration.csproj
              integration/managed/VelloSharp.Charting.Avalonia.Integration/VelloSharp.Charting.Avalonia.Integration.csproj
              integration/windows/VelloSharp.Windows.Core.Integration/VelloSharp.Windows.Core.Integration.csproj
              integration/windows/VelloSharp.WinForms.Core.Integration/VelloSharp.WinForms.Core.Integration.csproj
              integration/windows/VelloSharp.Integration.WinForms.Integration/VelloSharp.Integration.WinForms.Integration.csproj
              integration/windows/VelloSharp.Integration.Wpf.Integration/VelloSharp.Integration.Wpf.Integration.csproj
              integration/windows/VelloSharp.Charting.WinForms.Integration/VelloSharp.Charting.WinForms.Integration.csproj
              integration/windows/VelloSharp.Charting.Wpf.Integration/VelloSharp.Charting.Wpf.Integration.csproj
              integration/windows/VelloSharp.ChartRuntime.Windows.Integration/VelloSharp.ChartRuntime.Windows.Integration.csproj
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Download packaged artifacts
        uses: actions/download-artifact@v4
        with:
          name: nuget-packages
          path: artifacts/nuget

      - name: List packaged artifacts
        shell: pwsh
        run: Get-ChildItem -Recurse -Path artifacts/nuget

      - name: Configure local package source
        shell: pwsh
        run: |
          $sourcePath = (Resolve-Path "artifacts/nuget").ProviderPath
          dotnet nuget remove source VelloArtifacts --configfile NuGet.Config > $null 2>&1
          dotnet nuget add source $sourcePath --name VelloArtifacts --configfile NuGet.Config

      - name: Restore and run managed integration tests
        shell: pwsh
        run: |
          $projects = @"
          ${{ matrix.managed_projects }}
          "@ -split "`n" | ForEach-Object { $_.Trim() } | Where-Object { $_ }

          foreach ($project in $projects) {
              Write-Host "Validating managed package via $project"
              dotnet run --project $project -c Release
          }

      - name: Restore and run native integration test
        shell: pwsh
        run: |
          $project = '${{ matrix.native_project }}'
          if ([string]::IsNullOrWhiteSpace($project)) {
              return
          }

          Write-Host "Validating native packages via $project"
          dotnet run --project $project -c Release
